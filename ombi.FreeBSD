#!/bin/sh
#
# PROVIDE: ombi
# REQUIRE: DAEMON ombi
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# ombi_enable (bool): Set to NO by default.
#           Set it to YES to enable it.
# ombi_user:  The user account PlexPy daemon runs as what
#           you want it to be. It uses 'plexpy' user by
#           default. Do not sets it as empty or it will run
#           as root.
# ombi_dir:   Directory where PlexPy lives.
#           Default: /usr/local/share/plexpy
# ombi_chdir:  Change to this directory before running PlexPy.
#     Default is same as plexpy_dir.
# ombi_pid:  The name of the pidfile to create.
#     Default is plexpy.pid in plexpy_dir.
PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin"

. /etc/rc.subr

name="ombi"
rcvar=${name}_enable

load_rc_config ${name}

: ${ombi_enable:="NO"}
: ${ombi_user:="plex"}
: ${ombi_dir:="/usr/ombi"}
: ${ombi_chdir:="${ombi_dir}"}
: ${ombi_pid:="${ombi_dir}/ombi.pid"}
: ${ombi_flags:=""}

status_cmd="${name}_status"
stop_cmd="${name}_stop"

command="cd"
command_args="${ombi_dir}"
command="/usr/local/bin/mono"
command_args="Ombi.exe"



# Ensure user is root when running this script.
if [ `id -u` != "0" ]; then
  echo "Oops, you should be root before running this!"
  exit 1
fi

verify_ombi_pid() {
    # Make sure the pid corresponds to the PlexPy process.
    if [ -f ${ombi_pid} ]; then
      pid=`cat ${ombi_pid} 2>/dev/null`
      ps -p ${pid} | grep -q "${ombi_dir}"
      return $?
    else
      return 0
    fi
}

# Try to stop PlexPy cleanly by sending SIGTERM
ombi_stop() {
    echo "Stopping $name"
    verify_ombi_pid
    if [ -n "${pid}" ]; then
      kill ${pid}
      wait_for_pids ${pid}
      echo "Stopped."
    fi
}

ombi_status() {
    verify_ombi_pid
    if [ -n "${pid}" ]; then
      echo "$name is running as ${pid}."
    else
      echo "$name is not running."
    fi
}

run_rc_command "$1"
